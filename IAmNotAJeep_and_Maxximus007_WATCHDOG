#!/bin/bash

# Miner restart script v0019-1.4
# By Maxximus007 && IAmNotAJeep
# for nvOC by fullzero

export DISPLAY=:0

# Creating a log file to record restarts
LOG_FILE="/home/m1/5_restartlog"
if [ -e "$LOG_FILE" ] ; then
  #Limit the logfile, just keep the last 2K
  LASTLOG=$(tail -n 2K $LOG_FILE)
  echo $LASTLOG
  echo ""
fi

# Creating a alert log file for web to record problems //papampi
ALERT_LOG_FILE="/home/m1/7_wdog_alertlog"
if [ -e "$ALERT_LOG_FILE" ] ; then
  #Limit the logfile, just keep the last 2K
  LASTLOG=$(tail -n 1K $ALERT_LOG_FILE)
  echo $LASTLOG
  echo ""
fi

echo "$(date) - Starting miner restart script." | tee -a ${LOG_FILE}
echo "" #| tee -a ${LOG_FILE}
sleep 2
bash '/home/m1/telegram'
# Give oneBash time to start to prevent reboot
echo "$(date) - waiting 70 seconds before going 'on watch'" 
sleep 60

THRESHOLD=90
RESTART=0
GPU_COUNT=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits | tail -1)
COUNT=$((6 * $GPU_COUNT))
#reinit=6

while true
do
sleep 10  # sleep 60
#IAmNotAJeep MOD from V002
  JEEP=0
#IAmNotAJeep MOD from V002
  GPU=0
  REBOOTRESET=$(($REBOOTRESET + 1))

#IAmNotAJeep MOD from V002
  echo ""
  echo "      GPU_COUNT: " $GPU_COUNT | tee -a ${LOG_FILE}

#IAmNotAJeep MOD from V002

  UTILIZATIONS=$(nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits)
  echo ""
  echo "GPU UTILIZATION: " $UTILIZATIONS | tee -a ${LOG_FILE}
  echo ""




numtest='^[0-9]+$'
  
  for UTIL in $UTILIZATIONS
  do
    if ! [[ $UTIL =~ $numtest ]]
    then
        # Not numeric so: Help we've lost a GPU, so reboot
        echo "$(date) - Lost GPU so restarting system. Found GPU's:" | tee -a ${LOG_FILE} ${ALERT_LOG_FILE}
        echo "" #| tee -a ${LOG_FILE}
        #Hope PCI BUS info will help find the faulty GPU
        nvidia-smi --query-gpu=gpu_bus_id --format=csv | tee -a ${LOG_FILE} ${ALERT_LOG_FILE}
        echo "$(date) - reboot in 10 seconds"  | tee -a ${LOG_FILE} ${ALERT_LOG_FILE}
        echo ""
	bash '/home/m1/telegram'
        sleep 10
        sudo reboot
    fi

    # If utilization is lower than threshold count them:
    if [ $UTIL -lt $THRESHOLD ]
    then
      echo "$(date) - GPU under threshold found - GPU UTILIZATION: " $UTILIZATIONS  | tee -a ${LOG_FILE}
      echo ""
      COUNT=$(($COUNT - 1))
      #IAmNotAJeep MOD from V002
      JEEP=$(($JEEP + 1))
      #IAmNotAJeep MOD from V002
    fi
    GPU=$(($GPU + 1))
  done

#IAmNotAJeep MOD from V002
if [ $JEEP -gt 0 ]
 then

  if [ $COUNT -le 0 ]
  then
    INTERNET_IS_GO=0
    if nc -vzw1 google.com 443;
    #if nc -vzw1 $POOL 80;
    then
    INTERNET_IS_GO=1
    fi
    echo ""
    if [[ $RESTART -gt 4 && $INTERNET_IS_GO == 1 ]]
    then
      echo "$(date) - Utilization is too low: reviving did not work so restarting system in 10 seconds" | tee -a ${LOG_FILE} ${ALERT_LOG_FILE}
      echo "" #| tee -a ${LOG_FILE}
      bash '/home/m1/telegram'
      sleep 10
      sudo reboot
    fi
    echo "$(date) - Utilization is too low: restart 3main" | tee -a ${LOG_FILE} ${ALERT_LOG_FILE}
    # If miner runs in screen 'miner' kill the screen to be sure it's gone
    pkill -e miner
    bash '/home/m1/telegram'
    # Best to restart oneBash - settings might be adjusted already
    target=$(ps -ef | awk '$NF~"3main" {print $2}')
    kill $target #| tee -a ${LOG_FILE}
    echo "" #| tee -a ${LOG_FILE}
    RESTART=$(($RESTART + 1))
    REBOOTRESET=0
    COUNT=$GPU_COUNT
    # Give oneBash time to restart to prevent reboot
    sleep 60
  #fi
  else
  echo "$(date) - Low Utilization Detected: 3main will reinit if there are 6 consecutive failures" | tee -a ${LOG_FILE} ${ALERT_LOG_FILE}
  echo ""
 # echo "                  "$reinit "Failures Before reinit" 
  #reinit=$(($reinit-1))

#IAmNotAJeep MOD from V002
  fi

else
#IAmNotAJeep MOD from V002
  COUNT=$((6 * $GPU_COUNT))
  echo "$(date) - 5 by 5: REMEMBER TO THANK IAmNotAJeep and Maxximus007"
#IAmNotAJeep MOD from V002
fi

  # No need for a reboot after a while
  if [ $REBOOTRESET -gt 5 ]
  then
    RESTART=0
    REBOOTRESET=0
    #reinit=6
  fi
done

